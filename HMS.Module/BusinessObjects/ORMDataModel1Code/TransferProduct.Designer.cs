//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Xpo.Metadata;
using DevExpress.Data.Filtering;
using System.Collections.Generic;
using System.ComponentModel;
using System.Reflection;
namespace XafDataModel.Module.BusinessObjects.test2
{

    [DevExpress.ExpressApp.DefaultListViewOptions(DevExpress.ExpressApp.MasterDetailMode.ListViewOnly, true, DevExpress.ExpressApp.NewItemRowPosition.Bottom)]
    public partial class TransferProduct : XPObject
    {
        StockProduct fStockProduct;
        [Association(@"TransferProductReferencesStockProduct")]
        [DevExpress.Persistent.Base.DataSourceCriteria("Inventory ='@this.StockTransfer.FromWarehouse'")]
        public StockProduct StockProduct
        {
            get { return fStockProduct; }
            set { SetPropertyValue<StockProduct>(nameof(StockProduct), ref fStockProduct, value); }
        }
        [PersistentAlias("Iif([StockProduct.firstUnitQuantity] Is Null, 0.0, [StockProduct.firstUnitQuantity])")]
        public double Quantity
        {
            get { return (double)(EvaluateAlias(nameof(Quantity))); }
        }
        double fRequstedCount;
        public double RequstedCount
        {
            get { return fRequstedCount; }
            set { SetPropertyValue<double>(nameof(RequstedCount), ref fRequstedCount, value); }
        }
        string fNotes;
        [Size(SizeAttribute.Unlimited)]
        public string Notes
        {
            get { return fNotes; }
            set { SetPropertyValue<string>(nameof(Notes), ref fNotes, value); }
        }
        StockTransfer fStockTransfer;
        [Association(@"TransferProductReferencesStockTransfer")]
        public StockTransfer StockTransfer
        {
            get { return fStockTransfer; }
            set { SetPropertyValue<StockTransfer>(nameof(StockTransfer), ref fStockTransfer, value); }
        }
        bool fTobeApproved;
        public bool TobeApproved
        {
            get { return fTobeApproved; }
            set { SetPropertyValue<bool>(nameof(TobeApproved), ref fTobeApproved, value); }
        }
        bool fApproved;
        public bool Approved
        {
            get { return fApproved; }
            set { SetPropertyValue<bool>(nameof(Approved), ref fApproved, value); }
        }
        double fQuantityC;
        public double QuantityC
        {
            get { return fQuantityC; }
            set { SetPropertyValue<double>(nameof(QuantityC), ref fQuantityC, value); }
        }
    }

}
