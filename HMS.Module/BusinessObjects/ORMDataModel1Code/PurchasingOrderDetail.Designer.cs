//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Xpo.Metadata;
using DevExpress.Data.Filtering;
using System.Collections.Generic;
using System.ComponentModel;
using System.Reflection;
namespace XafDataModel.Module.BusinessObjects.test2
{

    [DevExpress.ExpressApp.DefaultListViewOptions(DevExpress.ExpressApp.MasterDetailMode.ListViewOnly, true, DevExpress.ExpressApp.NewItemRowPosition.Bottom)]
    public partial class PurchasingOrderDetail : XPBaseObject
    {
        int fid;
        [Key(true)]
        public int id
        {
            get { return fid; }
            set { SetPropertyValue<int>(nameof(id), ref fid, value); }
        }
        PurchasingOrder fpuchasingOrder;
        [Indexed(@"product", Name = @"Index1")]
        [Association(@"PurchasingOrderDetailReferencesPurchasingOrder")]
        public PurchasingOrder puchasingOrder
        {
            get { return fpuchasingOrder; }
            set { SetPropertyValue<PurchasingOrder>(nameof(puchasingOrder), ref fpuchasingOrder, value); }
        }
        Product fproduct;
        public Product product
        {
            get { return fproduct; }
            set { SetPropertyValue<Product>(nameof(product), ref fproduct, value); }
        }
        double fquantity;
        public double quantity
        {
            get { return fquantity; }
            set { SetPropertyValue<double>(nameof(quantity), ref fquantity, value); }
        }
        decimal fprice;
        public decimal price
        {
            get { return fprice; }
            set { SetPropertyValue<decimal>(nameof(price), ref fprice, value); }
        }
        [PersistentAlias("Iif([price] * ToDecimal([quantity]) Is Null, 0.0m, [price] * ToDecimal([quantity]))")]
        public decimal amount
        {
            get { return (decimal)(EvaluateAlias(nameof(amount))); }
        }
        double fDiscount;
        public double Discount
        {
            get { return fDiscount; }
            set { SetPropertyValue<double>(nameof(Discount), ref fDiscount, value); }
        }
    }

}
