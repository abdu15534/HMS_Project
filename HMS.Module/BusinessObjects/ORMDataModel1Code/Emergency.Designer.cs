//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Xpo.Metadata;
using DevExpress.Data.Filtering;
using System.Collections.Generic;
using System.ComponentModel;
using System.Reflection;
namespace XafDataModel.Module.BusinessObjects.test2
{

    [Persistent(@"Stay1")]
    public partial class Emergency : XPBaseObject
    {
        int fid;
        [Key(true)]
        [Persistent(@"StayID")]
        [DevExpress.Persistent.Validation.RuleRequiredField]
        public int id
        {
            get { return fid; }
            set { SetPropertyValue<int>(nameof(id), ref fid, value); }
        }
        Patient fPatient;
        [Association(@"EmergencyReferencesPatient")]
        [DevExpress.Persistent.Validation.RuleRequiredField,
DevExpress.Persistent.Base.DataSourceCriteria(" InStay = false AND InEmergency = false "),
]
        public Patient Patient
        {
            get { return fPatient; }
            set { SetPropertyValue<Patient>(nameof(Patient), ref fPatient, value); }
        }
        DateTime fdate;
        public DateTime date
        {
            get { return fdate; }
            set { SetPropertyValue<DateTime>(nameof(date), ref fdate, value); }
        }
        decimal fsupervision;
        public decimal supervision
        {
            get { return fsupervision; }
            set { SetPropertyValue<decimal>(nameof(supervision), ref fsupervision, value); }
        }
        Employee fdoctor;
        public Employee doctor
        {
            get { return fdoctor; }
            set { SetPropertyValue<Employee>(nameof(doctor), ref fdoctor, value); }
        }
        string ffinalDiagnosis;
        [Size(SizeAttribute.Unlimited)]
        public string finalDiagnosis
        {
            get { return ffinalDiagnosis; }
            set { SetPropertyValue<string>(nameof(finalDiagnosis), ref ffinalDiagnosis, value); }
        }
        string ffirstDiagnosis;
        [Size(SizeAttribute.Unlimited)]
        public string firstDiagnosis
        {
            get { return ffirstDiagnosis; }
            set { SetPropertyValue<string>(nameof(firstDiagnosis), ref ffirstDiagnosis, value); }
        }
        [PersistentAlias("Iif([StayMedicationsCollection][].Sum([total]) Is Null, 0.0m, [StayMedicationsCollection][].Sum([total]))")]
        public decimal medicationSum
        {
            get { return (decimal)(EvaluateAlias(nameof(medicationSum))); }
        }
        [PersistentAlias("Iif([ServiceDetailsCollection][].Sum([price]) Is Null, 0.0m, [ServiceDetailsCollection][].Sum([price]))")]
        public decimal servicesSum
        {
            get { return (decimal)(EvaluateAlias(nameof(servicesSum))); }
        }
        [PersistentAlias("Iif([SuppliesCollection][].Sum([total]) Is Null, 0.0m, [SuppliesCollection][].Sum([total]))")]
        public decimal suppliesSum
        {
            get { return (decimal)(EvaluateAlias(nameof(suppliesSum))); }
        }
        [PersistentAlias("[medicationSum] + [servicesSum] + [suppliesSum] + [supervision]")]
        public decimal TotalSum
        {
            get { return (decimal)(EvaluateAlias(nameof(TotalSum))); }
        }
        [PersistentAlias("[TotalSum]")]
        public decimal amount
        {
            get { return (decimal)(EvaluateAlias(nameof(amount))); }
        }
        bool fPaid;
        public bool Paid
        {
            get { return fPaid; }
            set { SetPropertyValue<bool>(nameof(Paid), ref fPaid, value); }
        }
        [Association(@"StayMedicationsReferencesEmergency"), Aggregated]
        public XPCollection<StayMedications> StayMedicationsCollection { get { return GetCollection<StayMedications>(nameof(StayMedicationsCollection)); } }
        [Association(@"StaySuppliesReferencesEmergency"), Aggregated]
        public XPCollection<StaySupplies> SuppliesCollection { get { return GetCollection<StaySupplies>(nameof(SuppliesCollection)); } }
        [Association(@"ServiceDetailsReferencesEmergency"), Aggregated]
        public XPCollection<ServiceDetails> ServiceDetailsCollection { get { return GetCollection<ServiceDetails>(nameof(ServiceDetailsCollection)); } }
        [Association(@"PaymentsReferencesEmergency"), Aggregated]
        public XPCollection<Payments> PaymentsCollection { get { return GetCollection<Payments>(nameof(PaymentsCollection)); } }
    }

}
